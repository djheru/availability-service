{
  "name": "Availability Service",
  "tagline": "A simple service to check availability of date range given a list of reserved date ranges",
  "body": "[![CircleCI](https://circleci.com/gh/djheru/availability-service.svg?style=shield)](https://circleci.com/gh/djheru/availability-service)\r\n\r\n# Availability Service\r\nThis module consists of a class that has one main method, `checkAvailability()`. This method accepts a start date and an end date as strings formatted like `'YYYY-MM-DD'`, along with an array of reservation objects, formatted like: \r\n```\r\n{\"campsiteId\": 1, \"startDate\": \"2016-06-01\", \"endDate\": \"2016-06-04\"}\r\n```\r\nThe method will check to see which sites, identified by `'campsiteId'`, have openings for the requested dates, taking the gap rules into consideration.\r\n\r\n## Gap Rules\r\nTo eliminate or minimize un-booked sites, site owners utilize \"Gap Rules\" which enforce a maximum number of days unbooked between reservations. To illustrate, consider a site that has existing reservations spanning the 1st through the 3rd of the month and the 10th through the 15th. If a gap rule exists that states the maximum gap is 2 days, a request for a reservation spanning the 4th through the 7th would be denied, because the gap between the 7th and the 10th violates the rule.\r\n\r\n## Building and Running Tests\r\n* `npm run build` - produces production version of your library under the `lib` folder\r\n* `npm run test` - You'll never believe what it does!\r\n* `npm run test:watch` - re-run tests as you make changes\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}